@model WebMVC.Models.Book.BookDetailViewModel

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

@{
    ViewBag.Title = "Book Details";
    var currentUser = User.Identity.Name;
    var userHasReview = Model.Reviews.Any(r => r.CustomerUsername.Equals(currentUser, StringComparison.OrdinalIgnoreCase));
}

<div class="container mt-5">
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">@Model.Title</h3>
                    <p><strong>Description:</strong> @Model.Description</p>
                    <p><strong>Price:</strong> @Model.Price.ToString("C")</p>

                    <div class="authors-section mt-4">
                        <h5 class="section-title">Authors</h5>
                        <div class="d-flex flex-wrap justify-content-start">
                            @foreach (var author in Model.Authors)
                            {
                                <div class="author-card p-2 m-2">
                                    <i class="fas fa-user-edit"></i> @author.Name
                                </div>
                            }
                        </div>
                    </div>

                    <div class="genres-section mt-4">
                        <h5 class="section-title">Genres</h5>
                        <div class="genres-list">
                            @foreach (var genre in Model.Genres)
                            {
                                <span class="genre-badge badge @(genre.Id == Model.PrimaryGenre.Id ? "badge-primary" : "badge-secondary") m-1">@genre.Name</span>
                            }
                        </div>
                    </div>

                    <div class="publisher-section mt-4">
                        <h5 class="section-title">Publisher</h5>
                        <p><i class="fas fa-building"></i> @Model.Publisher.Name</p>
                    </div>

                    <!-- Purchase Button -->
                    <div class="text-center mt-4">
                        @using (Html.BeginForm("Create", "PurchaseHistory", FormMethod.Post, new { @class = "d-inline-block" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("bookId", Model.Id)

                            <button type="submit" class="btn btn-primary">Purchase</button>
                        }
                        <a href="@Url.Action("Book", "PurchaseHistory", new { bookId = Model.Id })" class="btn btn-info">Purchase History</a>
                    </div>
                    <div class="reviews-section mt-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="section-title">Reviews</h5>
                            @if (!userHasReview)
                            {
                                <a href="@Url.Action("Create", "Review", new { bookId = Model.Id })" class="btn btn-success">Add Review</a>
                            }
                        </div>
                        @foreach (var review in Model.Reviews)
                        {
                            <div class="review-card card mb-3">
                                <div class="card-body">
                                    <div class="review-header d-flex justify-content-between">
                                        <div>
                                            <h6 class="user-name">@review.CustomerUsername</h6>
                                            <small class="text-muted">@review.BookTitle</small>
                                        </div>
                                        <div class="review-rating">
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                <i class="fas fa-star @(i < review.Rating ? "text-warning" : "text-secondary")"></i>
                                            }
                                        </div>
                                    </div>
                                    <p class="review-comment">@review.Comment</p>
                                    @if (review.CustomerUsername.Equals(currentUser, StringComparison.OrdinalIgnoreCase))
                                    {
                                        <div class="review-actions mt-2">
                                            <a href="@Url.Action("Edit", "Review", new { id = review.Id, bookId = Model.Id })" class="btn btn-sm btn-outline-warning">Edit</a>
                                            @using (Html.BeginForm("Delete", "Review", new { id = review.Id, bookId = Model.Id }, FormMethod.Post))
                                            {
                                                <button type="submit", action="Delete" class="btn btn-sm btn-outline-danger ml-2">Delete</button>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
