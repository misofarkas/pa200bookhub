@model WebMVC.Models.Book.SearchBookListViewModel

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

<h2>Books</h2>


@{
    await Html.RenderPartialAsync("BookSearchBox", new WebMVC.Models.Book.BookSearchViewModel());
}


@if (User.IsInRole("Admin"))
{
    <div class="book-action-buttons">
        <a href="@Url.Action("Create", "Book")" class="button create-button">Create Book</a>
    </div>
}

<table>
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Price</th>
            <th class="small-border">Authors</th>
            <th class="small-border">Genres</th>
            <th>Publisher</th>
            <th>Reviews</th>
            <th class="small-border" colspan="3">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Description</td>
                <td>@book.Price.ToString("C")</td>
                <td class="small-border">
                    <ul class="nested-list">
                        @foreach (var author in book.Authors)
                        {
                            <li>@author.Name</li>
                        }
                    </ul>
                </td>
                <td class="small-border">
                    <ul class="nested-list">
                        @foreach (var genre in book.Genres)
                        {
                            <span class="@(genre.Id == book.PrimaryGenre.Id ? "primary-genre" : "secondary-genre")">
                                @genre.Name
                            </span>
                        }
                    </ul>
                </td>
                <td>@book.Publisher.Name</td>
                <td>
                    @{
                        var totalReviews = book.Reviews.Count();
                        var averageRating = totalReviews > 0 ? book.Reviews.Average(r => r.Rating) : 0;
                    }
                    <div>@totalReviews Reviews</div>
                    <div>
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fa fa-star" style="color: @(i <= averageRating ? "#ffc107" : "#e4e5e9");"></i>
                        }
                    </div>
                </td>

                <td class="small-border action-buttons">
                    @if (User.IsInRole("Admin"))
                    {
                        <a href="@Url.Action("Edit", "Book", new { id = book.Id })" class="button edit-button">Edit</a>
                        @using (Html.BeginForm("Delete", "Book", new { id = book.Id }, FormMethod.Post))
                        {
                            <input type="submit" value="Delete" class="button delete-button" , onclick="return confirm('Are you sure?');" />
                        }
                    }
                    <a href="@Url.Action("Details", "Book", new { id = book.Id })" class="button detail-button">Open Detail</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages >= 1)
{
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="@((i == Model.CurrentPage) ? "active" : "")">
                    <a href="@Url.Action("Index", new { page = i, query = Model.SearchCriteria.Query, searchin = Model.SearchCriteria.SearchIn })">@i</a>
                </li>
            }
        </ul>
    </nav>
}
